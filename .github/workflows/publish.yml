name: Publish to Repository

on:
  push:
    branches: [master]
  pull_request:

env:
  DEBUG: 'napi:*'
  MACOSX_DEPLOYMENT_TARGET: '10.13'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc, x86_64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2

      - run: cargo install cargo-xwin

      - name: Node install
        run: npm ci

      - name: Build Linux
        run: npm run build -- --target x86_64-unknown-linux-gnu

      - name: Build Windows
        run: npm run build -- --target x86_64-pc-windows-msvc

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-windows
          path: dist
          if-no-files-found: error

  build-mac:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-apple-darwin, aarch64-apple-darwin

      - uses: Swatinem/rust-cache@v2

      - name: Node install
        run: npm ci

      - name: Build Mac x64
        run: npm run build -- --target x86_64-apple-darwin

      - name: Build Mac arm64
        run: npm run build -- --target aarch64-apple-darwin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-mac
          path: dist
          if-no-files-found: error

  deploy:
    # Only run on push to master in your repository, not forks or PRs
    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest
    needs: [build, build-mac]

    steps:
      - uses: actions/checkout@v3

      - name: Download Linux and Windows binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries-linux-windows
          path: dist/

      - name: Download Mac binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries-mac
          path: dist/

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Commit and push artifacts
        run: |
          git add dist/ -f
          git commit -m "Add built artifacts for commit ${{ github.sha }}"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}